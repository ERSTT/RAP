name: Build and Push Docker Image

on:
  workflow_run:
    workflows: ["Check Python Version"]
    types:
      - completed
  workflow_dispatch:

jobs:
  build_and_check_changes:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out code
      - name: Check out code
        uses: actions/checkout@v4

      # Step 2: Debug: Check the git status
      - name: Check git status
        run: git status

      # Step 3: Check if any file has been modified in the last 5 minutes
      - name: Check if any file has changed in the last 5 minutes
        id: check_changes
        run: |
          git fetch origin version  # 修改为 version 分支
          
          # Get the current time and convert to seconds
          CURRENT_TIME=$(date +%s)
          
          # Check for commits in the last 5 minutes
          COMMIT_COUNT=$(git log origin/version --since="5 minutes ago" --pretty=format:"%H" | wc -l)

          # Set the environment variable based on the commit count
          if [ $COMMIT_COUNT -gt 0 ]; then
            echo "Changes detected in the version branch within the last 5 minutes."
            echo "has_changes=true" >> $GITHUB_ENV
          else
            echo "No changes detected in the version branch within the last 5 minutes."
            echo "has_changes=false" >> $GITHUB_ENV
          fi

      # Step 4: Conditionally build Docker image
      - name: Build Docker image
        if: env.has_changes == 'true'
        run: |
          # Step 4.1: Log in to Docker Hub
          echo "Logging in to Docker Hub..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          
          # Step 4.2: Get the latest stable version of Python Alpine
          ALPINE_DIGEST=$(curl -s https://hub.docker.com/v2/repositories/library/python/tags/alpine | jq -r '.images[0].digest')
          STABLE_VERSION=$(curl -s https://hub.docker.com/v2/repositories/library/python/tags/?page_size=100 | \
            jq -r --arg ALPINE_DIGEST "$ALPINE_DIGEST" \
            '.results[] | select(.images[0].digest == $ALPINE_DIGEST) | .name' | \
            grep -E '^[0-9]+(\.[0-9]+){0,2}-alpine$' | sort -V | tail -n 1 | sed 's/-alpine$//')
          
          echo "VERSION=${STABLE_VERSION}" >> $GITHUB_ENV

          # Step 4.3: Build and Push Docker image
          docker build -t erstt/rap:python${{ env.VERSION }} -t erstt/rap:latest .
          docker push erstt/rap:python${{ env.VERSION }}
          docker push erstt/rap:latest
